{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gyurilee\\\\Documents\\\\mern-cafe-test\\\\client\\\\src\\\\components\\\\pages\\\\Result.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Styled from \"styled-components\";\nimport { Link, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Spinner from \"../Spinner\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Result = () => {\n  _s();\n\n  const [resultList, setResultList] = useState();\n  const [targetList, setTargetList] = useState();\n  const [reRender, setReRender] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  let mbti_result = JSON.parse(localStorage.getItem(\"fin_result\"));\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/get/result\").then(response => {\n      setResultList(response.data);\n    });\n  }, [reRender]);\n  useEffect(async () => {\n    setReRender(0);\n    await getFinalMbti();\n    await (targetList && console.log(targetList));\n\n    if (targetList) {\n      setIsLoading(false);\n    }\n  }, [resultList]);\n\n  const getFinalMbti = () => {\n    for (let i = 0; i < 16; i++) {\n      if (resultList && resultList[i].mbti == mbti_result) {\n        setTargetList(resultList[i]);\n        return;\n      }\n    }\n\n    console.log('fail');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 39\n    }, this) //<ResultWrap>\n    //     <h3>나와 어울리는 음료는</h3>\n    //     <MainResult>\n    //         <img src={`/images/coffee/${targetList.image}.png`} alt={targetList.name} />\n    //         <div class=\"coffee-feat\">\n    //             <p class=\"feat\">{targetList.feature.short}</p>\n    //             <p class=\"name\">{targetList.name}</p>\n    //         </div>\n    //         <div class=\"coffee-desc\">\n    //             {targetList.feature.long.split('</br>').map(line => {\n    //                 return (<p>{line.replace(/(<\\/?(?:a|p|img)[^>]*>)|<[^>]+>/ig, '')}<br /></p>)\n    //             })}\n    //         </div>\n    //     </MainResult>\n    //     <ResultFriend>\n    //         <p class=\"best_title\">연말에 생각 날 최고의 궁합</p>\n    //         <ul>\n    //             <li onclick=\"\">\n    //                 <img\n    //                     src={`/images/coffee/${targetList.friends[0].image}.png`}\n    //                     alt={targetList.friends[0].name}\n    //                 />\n    //                 <span>\n    //                     {targetList.friends[0].desc.split('</p>').map(line => {\n    //                         return (<p>{line.replace(/(<\\/?(?:a|p|img)[^>]*>)|<[^>]+>/ig, '')}</p>)\n    //                     })}\n    //                 </span>\n    //             </li>\n    //             <li onclick=\"location.href = '/result/14'\">\n    //                 <img\n    //                     src={`/images/coffee/${targetList.friends[1].image}.png`}\n    //                     alt={targetList.friends[1].name}\n    //                 />\n    //                 <span>\n    //                     {targetList.friends[1].desc.split('</p>').map(line => {\n    //                         return (<p>{line.replace(/(<\\/?(?:a|p|img)[^>]*>)|<[^>]+>/ig, '')}</p>)\n    //                     })}\n    //                 </span>\n    //             </li>\n    //         </ul>\n    //     </ResultFriend>\n    //     <Link to=\"/\">\n    //         <ReturnBtn>\n    //             테스트 다시 하러가기\n    //     </ReturnBtn>\n    //     </Link>\n    // </ResultWrap>\n\n  }, void 0, false);\n};\n\n_s(Result, \"MDv4W04A2H1HcRrCkGFbDZwNL/o=\");\n\n_c = Result;\nexport default Result;\nconst ResultWrap = Styled.div`\ndisplay: flex;\nalign-items: center;\nflex-direction: column;\nfont-family: \"Cafe24Oneprettynight\";\ncolor: #3a1a00;\npadding: 50px 30px;\noverflow-y: scroll;\noverflow-x: hidden;\nwidth: 100%;\nheight: 100%;\nbackground: url(../../images/background/background.png);\nh3{\n    margin: 30px 0;\n    text-align: center;\nfont-size: 2rem;\n}\na {\n    display: flex;\n    text-align: center;\n    width: 100%;\n}\n`;\nconst MainResult = Styled.div`\n    display: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\nimg {\n    width: 220px;\n}\n\n.coffee-feat {\n    text-align: center;\n    margin: 15px 0 35px 0;\n    .feat {\n        font-size: 1.7rem;\n        margin-bottom: 10px;\n        color: #b56467;\n    }\n    .name {\n        font-size: 2.7rem;\n    }\n}\n\n.coffee-desc p {\n    line-height: 1.5rem;\n    font-size: 1.1rem;\n    margin-bottom: 1rem;\n}\n`;\nconst ResultFriend = Styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\np.best_title {\n    font-size: 1.5rem;\n    margin : 10px 0 30px 0;\n}\nimg {\n    width: 130px;\n}\n\nul {\n    display: flex;\n    li{\n\n        display: flex:\n        align-items: center;\n        justify-content: center;\ntext-align: center;\n    }\n}\n`;\nconst ReturnBtn = Styled.button`\nmargin: 50px;\npadding: 1rem 0;\nfont-size: 1.5rem;\nheight: 5rem;\nwidth: 100%;\nfont-family: \"Cafe24Oneprettynight\";\nbackground-color: beige;\nborder: none;\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["C:/Users/gyurilee/Documents/mern-cafe-test/client/src/components/pages/Result.js"],"names":["React","useState","useEffect","Styled","Link","Route","BrowserRouter","Router","Spinner","axios","Result","resultList","setResultList","targetList","setTargetList","reRender","setReRender","isLoading","setIsLoading","mbti_result","JSON","parse","localStorage","getItem","get","then","response","data","getFinalMbti","console","log","i","mbti","ResultWrap","div","MainResult","ResultFriend","ReturnBtn","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,aAAa,IAAIC,MAAvC,QAAqD,kBAArD;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,EAA5C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,EAA5C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AAEA,MAAIkB,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAlB;AAEArB,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,KAAK,CAACe,GAAN,CAAU,kCAAV,EAA8CC,IAA9C,CAAoDC,QAAD,IAAc;AAC7Dd,MAAAA,aAAa,CAACc,QAAQ,CAACC,IAAV,CAAb;AACH,KAFD;AAIH,GANQ,EAMN,CAACZ,QAAD,CANM,CAAT;AAQAb,EAAAA,SAAS,CAAC,YAAY;AAClBc,IAAAA,WAAW,CAAC,CAAD,CAAX;AACA,UAAMY,YAAY,EAAlB;AACA,WAAOf,UAAU,IAAIgB,OAAO,CAACC,GAAR,CAAYjB,UAAZ,CAArB;;AACA,QAAIA,UAAJ,EAAgB;AACZK,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAPQ,EAON,CAACP,UAAD,CAPM,CAAT;;AASA,QAAMiB,YAAY,GAAG,MAAM;AACvB,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,UAAIpB,UAAU,IAAKA,UAAU,CAACoB,CAAD,CAAV,CAAcC,IAAd,IAAsBb,WAAzC,EAAuD;AACnDL,QAAAA,aAAa,CAACH,UAAU,CAACoB,CAAD,CAAX,CAAb;AACA;AACH;AACJ;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,GARD;;AAUA,sBACK;AAAA,cAAGb,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAA7B,CAAwC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9CC,mBADL;AAkDH,CArFD;;GAAMP,M;;KAAAA,M;AAuFN,eAAeA,MAAf;AAEA,MAAMuB,UAAU,GAAG9B,MAAM,CAAC+B,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;AAwBA,MAAMC,UAAU,GAAGhC,MAAM,CAAC+B,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;AA4BA,MAAME,YAAY,GAAGjC,MAAM,CAAC+B,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;AAyBA,MAAMG,SAAS,GAAGlC,MAAM,CAACmC,MAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport { Link, Route, BrowserRouter as Router } from \"react-router-dom\"\r\nimport Spinner from \"../Spinner\"\r\nimport axios from \"axios\";\r\n\r\nconst Result = () => {\r\n    const [resultList, setResultList] = useState();\r\n    const [targetList, setTargetList] = useState();\r\n    const [reRender, setReRender] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    let mbti_result = JSON.parse(localStorage.getItem(\"fin_result\"))\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(\"http://localhost:3001/get/result\").then((response) => {\r\n            setResultList(response.data)\r\n        })\r\n\r\n    }, [reRender])\r\n\r\n    useEffect(async () => {\r\n        setReRender(0)\r\n        await getFinalMbti()\r\n        await (targetList && console.log(targetList))\r\n        if (targetList) {\r\n            setIsLoading(false)\r\n        }\r\n    }, [resultList])\r\n\r\n    const getFinalMbti = () => {\r\n        for (let i = 0; i < 16; i++) {\r\n            if (resultList && (resultList[i].mbti == mbti_result)) {\r\n                setTargetList(resultList[i])\r\n                return\r\n            }\r\n        }\r\n        console.log('fail')\r\n    }\r\n\r\n    return (\r\n         <>{isLoading ? <Spinner /> : <Spinner />//<ResultWrap>\r\n        //     <h3>나와 어울리는 음료는</h3>\r\n        //     <MainResult>\r\n        //         <img src={`/images/coffee/${targetList.image}.png`} alt={targetList.name} />\r\n        //         <div class=\"coffee-feat\">\r\n        //             <p class=\"feat\">{targetList.feature.short}</p>\r\n        //             <p class=\"name\">{targetList.name}</p>\r\n        //         </div>\r\n        //         <div class=\"coffee-desc\">\r\n        //             {targetList.feature.long.split('</br>').map(line => {\r\n        //                 return (<p>{line.replace(/(<\\/?(?:a|p|img)[^>]*>)|<[^>]+>/ig, '')}<br /></p>)\r\n        //             })}\r\n        //         </div>\r\n        //     </MainResult>\r\n        //     <ResultFriend>\r\n        //         <p class=\"best_title\">연말에 생각 날 최고의 궁합</p>\r\n        //         <ul>\r\n        //             <li onclick=\"\">\r\n        //                 <img\r\n        //                     src={`/images/coffee/${targetList.friends[0].image}.png`}\r\n        //                     alt={targetList.friends[0].name}\r\n        //                 />\r\n        //                 <span>\r\n        //                     {targetList.friends[0].desc.split('</p>').map(line => {\r\n        //                         return (<p>{line.replace(/(<\\/?(?:a|p|img)[^>]*>)|<[^>]+>/ig, '')}</p>)\r\n        //                     })}\r\n        //                 </span>\r\n        //             </li>\r\n        //             <li onclick=\"location.href = '/result/14'\">\r\n        //                 <img\r\n        //                     src={`/images/coffee/${targetList.friends[1].image}.png`}\r\n        //                     alt={targetList.friends[1].name}\r\n        //                 />\r\n        //                 <span>\r\n        //                     {targetList.friends[1].desc.split('</p>').map(line => {\r\n        //                         return (<p>{line.replace(/(<\\/?(?:a|p|img)[^>]*>)|<[^>]+>/ig, '')}</p>)\r\n        //                     })}\r\n        //                 </span>\r\n        //             </li>\r\n        //         </ul>\r\n        //     </ResultFriend>\r\n        //     <Link to=\"/\">\r\n        //         <ReturnBtn>\r\n        //             테스트 다시 하러가기\r\n        //     </ReturnBtn>\r\n        //     </Link>\r\n        // </ResultWrap>\r\n        }</>\r\n    );\r\n};\r\n\r\nexport default Result;\r\n\r\nconst ResultWrap = Styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nflex-direction: column;\r\nfont-family: \"Cafe24Oneprettynight\";\r\ncolor: #3a1a00;\r\npadding: 50px 30px;\r\noverflow-y: scroll;\r\noverflow-x: hidden;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: url(../../images/background/background.png);\r\nh3{\r\n    margin: 30px 0;\r\n    text-align: center;\r\nfont-size: 2rem;\r\n}\r\na {\r\n    display: flex;\r\n    text-align: center;\r\n    width: 100%;\r\n}\r\n`;\r\n\r\nconst MainResult = Styled.div`\r\n    display: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nflex-direction: column;\r\nimg {\r\n    width: 220px;\r\n}\r\n\r\n.coffee-feat {\r\n    text-align: center;\r\n    margin: 15px 0 35px 0;\r\n    .feat {\r\n        font-size: 1.7rem;\r\n        margin-bottom: 10px;\r\n        color: #b56467;\r\n    }\r\n    .name {\r\n        font-size: 2.7rem;\r\n    }\r\n}\r\n\r\n.coffee-desc p {\r\n    line-height: 1.5rem;\r\n    font-size: 1.1rem;\r\n    margin-bottom: 1rem;\r\n}\r\n`;\r\nconst ResultFriend = Styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nflex-direction: column;\r\np.best_title {\r\n    font-size: 1.5rem;\r\n    margin : 10px 0 30px 0;\r\n}\r\nimg {\r\n    width: 130px;\r\n}\r\n\r\nul {\r\n    display: flex;\r\n    li{\r\n\r\n        display: flex:\r\n        align-items: center;\r\n        justify-content: center;\r\ntext-align: center;\r\n    }\r\n}\r\n`;\r\n\r\nconst ReturnBtn = Styled.button`\r\nmargin: 50px;\r\npadding: 1rem 0;\r\nfont-size: 1.5rem;\r\nheight: 5rem;\r\nwidth: 100%;\r\nfont-family: \"Cafe24Oneprettynight\";\r\nbackground-color: beige;\r\nborder: none;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}