{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gyurilee\\\\Documents\\\\mern-cafe-test\\\\client\\\\src\\\\components\\\\pages\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Tutorial from \"../Tutorial\";\nimport MainTest from \"../MainTest\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  _s();\n\n  const storyLists = [{\n    title: \"12월의 주말\",\n    first_sentence: \"모처럼 집에서 여유를 즐기고 있다\\n밖에서 캐롤이 조용히 창문을 타고 들려온다\\n\",\n    second_sentence: \"지난 한 해 동안의\\n내 발자취를 보기 위해\\n다이어리를 펼쳤다\\n\"\n  }, {\n    title: \"모임 당일\",\n    first_sentence: \"추운 날씨에 맞서기 위해\\n옷으로 꽁꽁 싸매고 집을 나섰다\\n\",\n    second_sentence: \"그러다 길 옆쪽으로\\n사람들이 북적북적 모여있는 것을\\n발견했다\\n\"\n  }, {\n    title: null,\n    first_sentence: \"드디어 도착한 집,\\n재미있게 놀았나요?\\n\",\n    second_sentence: \"추위와 싸웠을 당신을 위해\\n음료를 한 잔 준비했어요\\n\"\n  }];\n  const [story, setStory] = useState(0);\n  const [count, setCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [questionNum, setQuestionNum] = useState(0);\n  const [questionList, setQuestionList] = useState([]);\n  const [selectedMbti, setSelectedMbti] = useState([]);\n  const [finalResult, setFinalResult] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/get/question\").then(response => {\n      setQuestionList(response.data);\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (questionNum == 12) {\n      localStorage.setItem(\"arrayResult\", JSON.stringify(selectedMbti));\n      calculateResult();\n    }\n  }, [selectedMbti]);\n  useEffect(() => {\n    localStorage.setItem(\"fin_result\", JSON.stringify(finalResult));\n  }, [finalResult]);\n\n  const storyHandler = () => {\n    setStory(story + 1);\n    setCount(count + 1);\n  };\n\n  const questionHandler = e => {\n    setSelectedMbti([...selectedMbti, e.target.value]);\n    setQuestionNum(questionNum + 1);\n    setCount(count + 1);\n  };\n\n  const calculateResult = async () => {\n    let beforeResult = JSON.parse(localStorage.getItem(\"arrayResult\"));\n    let finResult = [];\n    (await beforeResult.filter(x => x == \"E\")) > beforeResult.filter(x => x == \"I\") ? finResult.push(\"E\") : finResult.push(\"I\");\n    (await beforeResult.filter(x => x == \"S\")) > beforeResult.filter(x => x == \"N\") ? finResult.push(\"S\") : finResult.push(\"N\");\n    (await beforeResult.filter(x => x == \"T\")) > beforeResult.filter(x => x == \"F\") ? finResult.push(\"T\") : finResult.push(\"F\");\n    (await beforeResult.filter(x => x == \"J\")) > beforeResult.filter(x => x == \"P\") ? finResult.push(\"J\") : finResult.push(\"P\");\n    await setFinalResult(finResult.join(\"\").toLowerCase());\n  };\n\n  if (count == 0 || count == 5 || count == 14) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Tutorial, {\n        story: storyLists[story],\n        storyHandler: storyHandler,\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isLoading ? \"loading\" : /*#__PURE__*/_jsxDEV(MainTest, {\n        questionList: questionList,\n        questionNum: questionNum,\n        questionHandler: questionHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(Test, \"uE6AhHBdRfM3Az2fmeXDOEKjN+M=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/gyurilee/Documents/mern-cafe-test/client/src/components/pages/Test.js"],"names":["React","useState","useEffect","Tutorial","MainTest","axios","Test","storyLists","title","first_sentence","second_sentence","story","setStory","count","setCount","isLoading","setIsLoading","questionNum","setQuestionNum","questionList","setQuestionList","selectedMbti","setSelectedMbti","finalResult","setFinalResult","get","then","response","data","localStorage","setItem","JSON","stringify","calculateResult","storyHandler","questionHandler","e","target","value","beforeResult","parse","getItem","finResult","filter","x","push","join","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Tutorial from \"../Tutorial\";\r\nimport MainTest from \"../MainTest\";\r\nimport axios from \"axios\";\r\n\r\nconst Test = () => {\r\n    const storyLists = [\r\n        {\r\n            title: \"12월의 주말\",\r\n            first_sentence:\r\n                \"모처럼 집에서 여유를 즐기고 있다\\n밖에서 캐롤이 조용히 창문을 타고 들려온다\\n\",\r\n            second_sentence:\r\n                \"지난 한 해 동안의\\n내 발자취를 보기 위해\\n다이어리를 펼쳤다\\n\",\r\n        },\r\n        {\r\n            title: \"모임 당일\",\r\n            first_sentence:\r\n                \"추운 날씨에 맞서기 위해\\n옷으로 꽁꽁 싸매고 집을 나섰다\\n\",\r\n            second_sentence:\r\n                \"그러다 길 옆쪽으로\\n사람들이 북적북적 모여있는 것을\\n발견했다\\n\",\r\n        },\r\n        {\r\n            title: null,\r\n            first_sentence: \"드디어 도착한 집,\\n재미있게 놀았나요?\\n\",\r\n            second_sentence:\r\n                \"추위와 싸웠을 당신을 위해\\n음료를 한 잔 준비했어요\\n\",\r\n        },\r\n    ];\r\n    const [story, setStory] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [questionNum, setQuestionNum] = useState(0);\r\n    const [questionList, setQuestionList] = useState([]);\r\n    const [selectedMbti, setSelectedMbti] = useState([]);\r\n    const [finalResult, setFinalResult] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:3001/get/question\").then((response) => {\r\n            setQuestionList(response.data);\r\n            setIsLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (questionNum == 12) {\r\n            localStorage.setItem(\"arrayResult\", JSON.stringify(selectedMbti));\r\n            calculateResult();\r\n        }\r\n    }, [selectedMbti]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"fin_result\", JSON.stringify(finalResult))\r\n    }, [finalResult])\r\n\r\n    const storyHandler = () => {\r\n        setStory(story + 1);\r\n        setCount(count + 1);\r\n    };\r\n\r\n    const questionHandler = (e) => {\r\n        setSelectedMbti([...selectedMbti, e.target.value]);\r\n        setQuestionNum(questionNum + 1);\r\n        setCount(count + 1);\r\n    };\r\n    const calculateResult = async () => {\r\n        let beforeResult = JSON.parse(localStorage.getItem(\"arrayResult\"));\r\n        let finResult = [];\r\n        (await beforeResult.filter((x) => x == \"E\")) >\r\n        beforeResult.filter((x) => x == \"I\")\r\n            ? finResult.push(\"E\")\r\n            : finResult.push(\"I\");\r\n        (await beforeResult.filter((x) => x == \"S\")) >\r\n        beforeResult.filter((x) => x == \"N\")\r\n            ? finResult.push(\"S\")\r\n            : finResult.push(\"N\");\r\n        (await beforeResult.filter((x) => x == \"T\")) >\r\n        beforeResult.filter((x) => x == \"F\")\r\n            ? finResult.push(\"T\")\r\n            : finResult.push(\"F\");\r\n        (await beforeResult.filter((x) => x == \"J\")) >\r\n        beforeResult.filter((x) => x == \"P\")\r\n            ? finResult.push(\"J\")\r\n            : finResult.push(\"P\");\r\n\r\n        await setFinalResult(finResult.join(\"\").toLowerCase());\r\n    };\r\n\r\n    if (count == 0 || count == 5 || count == 14) {\r\n        return (\r\n            <>\r\n                <Tutorial\r\n                    story={storyLists[story]}\r\n                    storyHandler={storyHandler}\r\n                    count = {count}\r\n                />\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                {isLoading ? (\r\n                    \"loading\"\r\n                ) : (\r\n                    <MainTest\r\n                        questionList={questionList}\r\n                        questionNum={questionNum}\r\n                        questionHandler={questionHandler}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}