{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gyurilee\\\\Documents\\\\mern-cafe-test\\\\client\\\\src\\\\components\\\\Snow.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Snow() {\n  setTimeout(() => {\n    var canvas = document.querySelector(\".snow\"),\n        ctx = canvas.getContext(\"2d\"),\n        windowW = window.innerWidth,\n        windowH = window.innerHeight,\n        numFlakes = 70,\n        flakes = [];\n\n    function Flake(x, y) {\n      var maxWeight = 2,\n          maxSpeed = 0.7;\n      this.x = x;\n      this.y = y;\n      this.r = randomBetween(0, 1);\n      this.a = randomBetween(0, Math.PI);\n      this.aStep = 0.01;\n      this.weight = randomBetween(2, maxWeight);\n      this.alpha = this.weight / maxWeight;\n      this.speed = this.weight / maxWeight * maxSpeed;\n\n      this.update = function () {\n        this.x += Math.cos(this.a) * this.r;\n        this.a += this.aStep;\n        this.y += this.speed;\n      };\n    }\n\n    function init() {\n      var i = numFlakes,\n          flake,\n          x,\n          y;\n\n      while (i--) {\n        x = randomBetween(0, windowW, true);\n        y = randomBetween(0, windowH, true);\n        flake = new Flake(x, y);\n        flakes.push(flake);\n      }\n\n      scaleCanvas();\n      loop();\n    }\n\n    function scaleCanvas() {\n      canvas.width = windowW;\n      canvas.height = windowH;\n    }\n\n    function loop() {\n      var i = flakes.length,\n          z,\n          dist,\n          flakeA,\n          flakeB; // clear canvas\n\n      ctx.save();\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.clearRect(0, 0, windowW, windowH);\n      ctx.restore(); // loop of hell\n\n      while (i--) {\n        flakeA = flakes[i];\n        flakeA.update();\n        /*for (z = 0; z < flakes.length; z++) {\r\n        flakeB = flakes[z];\r\n        if (flakeA !== flakeB && distanceBetween(flakeA, flakeB) < 150) {          \r\n        ctx.beginPath();\r\n        ctx.moveTo(flakeA.x, flakeA.y);\r\n        ctx.lineTo(flakeB.x, flakeB.y);\r\n        ctx.strokeStyle = '#444444';\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n        }\r\n        }*/\n\n        ctx.beginPath();\n        ctx.arc(flakeA.x, flakeA.y, flakeA.weight, 0, 2 * Math.PI, false);\n        ctx.fillStyle = \"rgba(255, 255, 255, \" + flakeA.alpha + \")\";\n        ctx.fill();\n\n        if (flakeA.y >= windowH) {\n          flakeA.y = -flakeA.weight;\n        }\n      }\n\n      requestAnimationFrame(loop);\n    }\n\n    function randomBetween(min, max, round) {\n      var num = Math.random() * (max - min + 1) + min;\n\n      if (round) {\n        return Math.floor(num);\n      } else {\n        return num;\n      }\n    }\n\n    function distanceBetween(vector1, vector2) {\n      var dx = vector2.x - vector1.x,\n          dy = vector2.y - vector1.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    init();\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    className: \"snow\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Snow;\nexport default Snow;\nconst Canvas = styled.canvas`\n    position: absolute;\n`;\n_c2 = Canvas;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Snow\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"sources":["C:/Users/gyurilee/Documents/mern-cafe-test/client/src/components/Snow.js"],"names":["React","styled","Snow","setTimeout","canvas","document","querySelector","ctx","getContext","windowW","window","innerWidth","windowH","innerHeight","numFlakes","flakes","Flake","x","y","maxWeight","maxSpeed","r","randomBetween","a","Math","PI","aStep","weight","alpha","speed","update","cos","init","i","flake","push","scaleCanvas","loop","width","height","length","z","dist","flakeA","flakeB","save","setTransform","clearRect","restore","beginPath","arc","fillStyle","fill","requestAnimationFrame","min","max","round","num","random","floor","distanceBetween","vector1","vector2","dx","dy","sqrt","Canvas"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Snow() {\r\n    setTimeout(() => {\r\n        var canvas = document.querySelector(\".snow\"),\r\n            ctx = canvas.getContext(\"2d\"),\r\n            windowW = window.innerWidth,\r\n            windowH = window.innerHeight,\r\n            numFlakes = 70,\r\n            flakes = [];\r\n\r\n        function Flake(x, y) {\r\n            var maxWeight = 2,\r\n                maxSpeed = 0.7;\r\n\r\n            this.x = x;\r\n            this.y = y;\r\n            this.r = randomBetween(0, 1);\r\n            this.a = randomBetween(0, Math.PI);\r\n            this.aStep = 0.01;\r\n\r\n            this.weight = randomBetween(2, maxWeight);\r\n            this.alpha = this.weight / maxWeight;\r\n            this.speed = (this.weight / maxWeight) * maxSpeed;\r\n\r\n            this.update = function () {\r\n                this.x += Math.cos(this.a) * this.r;\r\n                this.a += this.aStep;\r\n\r\n                this.y += this.speed;\r\n            };\r\n        }\r\n\r\n        function init() {\r\n            var i = numFlakes,\r\n                flake,\r\n                x,\r\n                y;\r\n\r\n            while (i--) {\r\n                x = randomBetween(0, windowW, true);\r\n                y = randomBetween(0, windowH, true);\r\n\r\n                flake = new Flake(x, y);\r\n                flakes.push(flake);\r\n            }\r\n\r\n            scaleCanvas();\r\n            loop();\r\n        }\r\n\r\n        function scaleCanvas() {\r\n            canvas.width = windowW;\r\n            canvas.height = windowH;\r\n        }\r\n\r\n        function loop() {\r\n            var i = flakes.length,\r\n                z,\r\n                dist,\r\n                flakeA,\r\n                flakeB;\r\n\r\n            // clear canvas\r\n            ctx.save();\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.clearRect(0, 0, windowW, windowH);\r\n            ctx.restore();\r\n\r\n            // loop of hell\r\n            while (i--) {\r\n                flakeA = flakes[i];\r\n                flakeA.update();\r\n\r\n                /*for (z = 0; z < flakes.length; z++) {\r\n  flakeB = flakes[z];\r\n  if (flakeA !== flakeB && distanceBetween(flakeA, flakeB) < 150) {          \r\n    ctx.beginPath();\r\n    ctx.moveTo(flakeA.x, flakeA.y);\r\n    ctx.lineTo(flakeB.x, flakeB.y);\r\n    ctx.strokeStyle = '#444444';\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  }\r\n}*/\r\n\r\n                ctx.beginPath();\r\n                ctx.arc(\r\n                    flakeA.x,\r\n                    flakeA.y,\r\n                    flakeA.weight,\r\n                    0,\r\n                    2 * Math.PI,\r\n                    false\r\n                );\r\n                ctx.fillStyle = \"rgba(255, 255, 255, \" + flakeA.alpha + \")\";\r\n                ctx.fill();\r\n\r\n                if (flakeA.y >= windowH) {\r\n                    flakeA.y = -flakeA.weight;\r\n                }\r\n            }\r\n\r\n            requestAnimationFrame(loop);\r\n        }\r\n\r\n        function randomBetween(min, max, round) {\r\n            var num = Math.random() * (max - min + 1) + min;\r\n\r\n            if (round) {\r\n                return Math.floor(num);\r\n            } else {\r\n                return num;\r\n            }\r\n        }\r\n\r\n        function distanceBetween(vector1, vector2) {\r\n            var dx = vector2.x - vector1.x,\r\n                dy = vector2.y - vector1.y;\r\n\r\n            return Math.sqrt(dx * dx + dy * dy);\r\n        }\r\n\r\n        init();\r\n    }, 0);\r\n\r\n    return <Canvas className=\"snow\"></Canvas>;\r\n}\r\n\r\nexport default Snow;\r\n\r\nconst Canvas = styled.canvas`\r\n    position: absolute;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}