{"version":3,"sources":["components/GlobalStyles.js","components/Button.js","components/pages/Start.js","components/Snow.js","components/StoryBtn.js","components/Tutorial.js","components/ProgBar.js","components/Question.js","components/ChoiceBtn.js","components/MainTest.js","components/pages/Test.js","components/Spinner.js","components/pages/Result.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","reset","StyledButton","styled","button","Button","children","rest","Fade","keyframes","StartWrap","div","StartMain","Contents","Start","class","src","alt","to","Snow","setTimeout","canvas","document","querySelector","ctx","getContext","windowW","window","innerWidth","windowH","innerHeight","flakes","Flake","x","y","this","r","randomBetween","a","Math","PI","aStep","weight","alpha","speed","update","cos","loop","flakeA","i","length","save","setTransform","clearRect","restore","beginPath","arc","fillStyle","fill","requestAnimationFrame","min","max","round","num","random","floor","flake","push","width","height","init","Canvas","className","StoryBtn","storyHandler","count","ResultBtn","NextBtn","onClick","Wrap","StoryWrap","ButtonWrap","Tutorial","story","title","first_sentence","split","map","line","second_sentence","ProgBar","iconPercentage","percentage","questionNum","theme","BarContainer","Progress","Percentage","Styled","props","Question","questionList","QuestionWrap","icon","question","ChoiceBtn","questionHandler","SelectSecWrap","SelectBtn","value","alpa_result","first","select_list","second","MainTest","TestWrap","Test","useState","setStory","setCount","isLoading","setIsLoading","setQuestionNum","setQuestionList","selectedMbti","setSelectedMbti","finalResult","setFinalResult","useEffect","axios","get","then","response","data","localStorage","setItem","JSON","stringify","calculateResult","beforeResult","parse","getItem","finResult","filter","join","toLowerCase","e","target","Spinner","Result","resultList","setResultList","targetList","setTargetList","reRender","setReRender","mbti_result","getFinalMbti","console","log","mbti","ResultWrap","MainResult","image","name","feature","short","long","replace","ResultFriend","onclick","friends","desc","ReturnBtn","RootContainer","App","path","exact","component","ReactDOM","render","getElementById"],"mappings":"gNAsDeA,EAnDMC,YAAH,4oCAChBC,K,sCCDIC,EAAeC,IAAOC,OAAV,omBA+BHC,I,UAAAA,EAJf,YAAuC,IAArBC,EAAoB,EAApBA,SAAaC,EAAO,4BAClC,OAAO,cAACL,EAAD,2BAAkBK,GAAlB,aAAyBD,MCQ9BE,EAAOC,YAAH,oIAKJC,EAAYP,IAAOQ,IAAV,4LAQTC,EAAYT,IAAOQ,IAAV,kIAMTE,EAAWV,IAAOQ,IAAV,mkBAaOH,GAeNM,EAjFD,WACV,OACI,cAACJ,EAAD,UACI,cAACE,EAAD,UACI,eAACC,EAAD,WACI,sBAAME,MAAM,OAAZ,SACI,qBACIC,IAAI,sCACJC,IAAI,gBAGZ,uEAEI,uBAFJ,mCAII,0BAEJ,0DAEI,uBAFJ,wEAII,uBAJJ,oDAMI,0BAEJ,cAAC,IAAD,CAAMC,GAAG,QAAT,SACA,cAAC,EAAD,iD,wCCmGLC,I,IAAAA,EA/Hf,WA4HI,OA3HAC,YAAW,WACP,IAAIC,EAASC,SAASC,cAAc,SAChCC,EAAMH,EAAOI,WAAW,MACxBC,EAAUC,OAAOC,WACjBC,EAAUF,OAAOG,YAEjBC,EAAS,GAEb,SAASC,EAAMC,EAAGC,GAIdC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKC,EAAIC,EAAc,EAAG,GAC1BF,KAAKG,EAAID,EAAc,EAAGE,KAAKC,IAC/BL,KAAKM,MAAQ,IAEbN,KAAKO,OAASL,EAAc,EATZ,GAUhBF,KAAKQ,MAAQR,KAAKO,OAVF,EAWhBP,KAAKS,MAAST,KAAKO,OAXH,EACD,GAYfP,KAAKU,OAAS,WACVV,KAAKF,GAAKM,KAAKO,IAAIX,KAAKG,GAAKH,KAAKC,EAClCD,KAAKG,GAAKH,KAAKM,MAEfN,KAAKD,GAAKC,KAAKS,OA2BvB,SAASG,IACL,IAGIC,EAHAC,EAAIlB,EAAOmB,OAaf,IANA1B,EAAI2B,OACJ3B,EAAI4B,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC5B,EAAI6B,UAAU,EAAG,EAAG3B,EAASG,GAC7BL,EAAI8B,UAGGL,MACHD,EAASjB,EAAOkB,IACTJ,SAcPrB,EAAI+B,YACJ/B,EAAIgC,IACAR,EAAOf,EACPe,EAAOd,EACPc,EAAON,OACP,EACA,EAAIH,KAAKC,IACT,GAEJhB,EAAIiC,UAAY,uBAAyBT,EAAOL,MAAQ,IACxDnB,EAAIkC,OAEAV,EAAOd,GAAKL,IACZmB,EAAOd,GAAKc,EAAON,QAI3BiB,sBAAsBZ,GAG1B,SAASV,EAAcuB,EAAKC,EAAKC,GAC7B,IAAIC,EAAMxB,KAAKyB,UAAYH,EAAMD,EAAM,GAAKA,EAE5C,OAAIE,EACOvB,KAAK0B,MAAMF,GAEXA,GA/Ef,WAMI,IALA,IACIG,EADAjB,EA1BQ,GA+BLA,KAIHiB,EAAQ,IAAIlC,EAHRK,EAAc,EAAGX,GAAS,GAC1BW,EAAc,EAAGR,GAAS,IAG9BE,EAAOoC,KAAKD,GAQhB7C,EAAO+C,MAAQ1C,EACfL,EAAOgD,OAASxC,EALhBkB,IA2EJuB,KACD,GAEI,cAACC,EAAD,CAAQC,UAAU,UAKvBD,EAASpE,IAAOkB,OAAV,qDC/GGoD,I,QAAAA,EAhBf,YAA0C,IAAvBC,EAAsB,EAAtBA,aACf,OAAY,IADyB,EAARC,MAGrB,cAAC,IAAD,CAAMzD,GAAG,UAAT,SAAmB,cAAC0D,EAAD,UAAW,qBAAK5D,IAAI,uCAMvC,eAAC6D,EAAD,CAASC,QAASJ,EAAlB,iBACY,mBAAGF,UAAU,kCAc/BK,EAAU1E,IAAOC,OAAV,6PAaPwE,EAAYzE,IAAOC,OAAV,mOCbf,I,MAAMI,EAAOC,YAAH,oIAMJsE,EAAO5E,IAAOQ,IAAV,uOAYJqE,EAAY7E,IAAOQ,IAAV,ubAOMH,EAOAA,GAKfyE,EAAa9E,IAAOQ,IAAV,0BAEDuE,EA/Df,YAAiD,IAA9BC,EAA6B,EAA7BA,MAAOT,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,MACpC,OACI,eAACI,EAAD,WACI,cAAC,EAAD,IACA,eAACC,EAAD,WACI,6BAAKG,EAAMC,QACX,4BACKD,EAAME,eAAeC,MAAM,MAAMC,KAAI,SAAAC,GAClC,OAAO,qCAAGA,EAAK,+BAGvB,4BACCL,EAAMM,gBAAgBH,MAAM,MAAMC,KAAI,SAAAC,GAC/B,OAAO,qCAAGA,EAAK,kCAI3B,cAACP,EAAD,UACI,cAAC,EAAD,CAASP,aAAcA,EAAcC,MAAOA,UCH7Ce,I,EAAAA,GAjBf,YAAmC,IACzBC,EAAiB,CACnBC,WAF0B,EAAfC,aAIf,OACI,cAAC,IAAD,CAAeC,MAAOH,EAAtB,SACI,cAACI,GAAD,UACI,cAACC,GAAD,UACI,cAACC,GAAD,UACI,mBAAGzB,UAAU,4BAU/BuB,GAAeG,IAAOvF,IAAV,uLAUZqF,GAAWE,IAAOvF,IAAV,4LAWRsF,GAAaC,IAAOvF,IAAV,uWAEP,SAAAwF,GAAK,OAA2B,EAAvBA,EAAML,MAAMF,cC7BfQ,I,MAAAA,GAbf,YAAmC,IAAhBC,EAAe,EAAfA,aACf,OACI,eAACC,GAAD,WACI,mBAAG9B,UAAW6B,EAAaE,OAC3B,6BACCF,EAAaG,SAASlB,MAAM,SAASC,KAAI,SAAAC,GAC9B,OAAO,qCAAGA,EAAK,mCASjCc,GAAeJ,IAAOvF,IAAV,yfCEH8F,I,GAAAA,GAjBf,YAAqD,IAAjCJ,EAAgC,EAAhCA,aAAcK,EAAkB,EAAlBA,gBAC9B,OACI,eAACC,GAAD,WACI,cAACC,GAAD,CAAW9B,QAAS4B,EAAiBG,MAAOR,EAAaS,YAAYC,MAArE,SACCV,EAAaW,YAAYD,MAAMzB,MAAM,SAASC,KAAI,SAAAC,GACvC,OAAO,qCAAGA,EAAK,+BAG3B,cAACoB,GAAD,CAAW9B,QAAS4B,EAAkBG,MAAOR,EAAaS,YAAYG,OAAtE,SACCZ,EAAaW,YAAYC,OAAO3B,MAAM,SAASC,KAAI,SAAAC,GACxC,OAAO,qCAAGA,EAAK,mCAWjCmB,GAAgBT,IAAOvF,IAAV,kRAcbiG,GAAYV,IAAO9F,OAAV,gvBCtBA8G,I,eAAAA,GAVf,YAAiE,IAA9Cb,EAA6C,EAA7CA,aAAcR,EAA+B,EAA/BA,YAAaa,EAAkB,EAAlBA,gBAC1C,OACI,eAACS,GAAD,WACI,cAAC,GAAD,CAAStB,YAAaA,IACtB,cAAC,GAAD,CAAUQ,aAAcA,EAAaR,KACrC,cAAC,GAAD,CAAWQ,aAAcA,EAAaR,GAAca,gBAAiBA,QAO3ES,GAAWhH,IAAOQ,IAAV,2H,oBCgGCyG,GA7GF,WACT,IADe,EAuBWC,mBAAS,GAvBpB,mBAuBRlC,EAvBQ,KAuBDmC,EAvBC,OAwBWD,mBAAS,GAxBpB,mBAwBR1C,EAxBQ,KAwBD4C,EAxBC,OAyBmBF,oBAAS,GAzB5B,mBAyBRG,EAzBQ,KAyBGC,EAzBH,OA0BuBJ,mBAAS,GA1BhC,mBA0BRxB,EA1BQ,KA0BK6B,EA1BL,OA2ByBL,mBAAS,IA3BlC,mBA2BRhB,EA3BQ,KA2BMsB,EA3BN,OA4ByBN,mBAAS,IA5BlC,mBA4BRO,EA5BQ,KA4BMC,EA5BN,OA6BuBR,mBAAS,IA7BhC,mBA6BRS,EA7BQ,KA6BKC,EA7BL,KA+BfC,qBAAU,WACNC,KAAMC,IAAI,qDAAqDC,MAAK,SAACC,GACjET,EAAgBS,EAASC,MACzBZ,GAAa,QAElB,IAEHO,qBAAU,WACa,IAAfnC,IACAyC,aAAaC,QAAQ,cAAeC,KAAKC,UAAUb,IACnDc,OAEL,CAACd,IAEJI,qBAAU,WACNM,aAAaC,QAAQ,aAAcC,KAAKC,UAAUX,MACnD,CAACA,IAEJ,IAUMY,EAAe,uCAAG,8BAAApG,EAAA,6DAChBqG,EAAeH,KAAKI,MAAMN,aAAaO,QAAQ,gBAC/CC,EAAY,GAFI,SAGbH,EAAaI,QAAO,SAAC9G,GAAD,MAAY,KAALA,KAHd,2BAIpB0G,EAAaI,QAAO,SAAC9G,GAAD,MAAY,KAALA,OAJP,4BAKd6G,EAAU3E,KAAK,KALD,wBAMd2E,EAAU3E,KAAK,KAND,yBAObwE,EAAaI,QAAO,SAAC9G,GAAD,MAAY,KAALA,KAPd,4BAQpB0G,EAAaI,QAAO,SAAC9G,GAAD,MAAY,KAALA,OARP,4BASd6G,EAAU3E,KAAK,KATD,wBAUd2E,EAAU3E,KAAK,KAVD,yBAWbwE,EAAaI,QAAO,SAAC9G,GAAD,MAAY,KAALA,KAXd,4BAYpB0G,EAAaI,QAAO,SAAC9G,GAAD,MAAY,KAALA,OAZP,4BAad6G,EAAU3E,KAAK,KAbD,wBAcd2E,EAAU3E,KAAK,KAdD,yBAebwE,EAAaI,QAAO,SAAC9G,GAAD,MAAY,KAALA,KAfd,4BAgBpB0G,EAAaI,QAAO,SAAC9G,GAAD,MAAY,KAALA,OAhBP,4BAiBd6G,EAAU3E,KAAK,KAjBD,wBAkBd2E,EAAU3E,KAAK,KAlBD,yBAoBd4D,EAAee,EAAUE,KAAK,IAAIC,eApBpB,4CAAH,qDAuBrB,OAAa,GAATtE,GAAuB,GAATA,GAAuB,IAATA,EAExB,mCACI,cAAC,EAAD,CACIQ,MArFG,CACf,CACIC,MAAO,8BACPC,eACI,gNACJI,gBACI,iKAER,CACIL,MAAO,4BACPC,eACI,wJACJI,gBACI,2KAER,CACIL,MAAO,KACPC,eAAgB,sGAChBI,gBACI,6IAkEsBN,GAClBT,aAtCK,WACjB4C,EAASnC,EAAQ,GACjBoC,EAAS5C,EAAQ,IAqCLA,MAASA,MAMjB,mCACK6C,EACG,UAEA,cAAC,GAAD,CACInB,aAAcA,EACdR,YAAaA,EACba,gBA/CI,SAACwC,GACrBrB,EAAgB,GAAD,mBAAKD,GAAL,CAAmBsB,EAAEC,OAAOtC,SAC3Ca,EAAe7B,EAAc,GAC7B0B,EAAS5C,EAAQ,SC3CVyE,I,MAfC,WACZ,OACI,sBAAK5E,UAAU,aAAf,UACA,qBAAKzD,MAAM,aAAX,SACI,qBAAKA,MAAM,mBAAX,SACI,qBAAKA,MAAM,eAKnB,qGC+EOsI,GAvFA,WAAO,IAAD,EACmBhC,qBADnB,mBACViC,EADU,KACEC,EADF,OAEmBlC,qBAFnB,mBAEVmC,EAFU,KAEEC,EAFF,OAGepC,qBAHf,mBAGVqC,EAHU,KAGAC,EAHA,OAIiBtC,oBAAS,GAJ1B,mBAIVG,EAJU,KAICC,EAJD,KAMbmC,EAAcpB,KAAKI,MAAMN,aAAaO,QAAQ,eAElDb,qBAAU,WAENC,KAAMC,IAAI,mDAAmDC,MAAK,SAACC,GAC/DmB,EAAcnB,EAASC,WAG5B,CAACqB,IAEJ1B,oBAAS,sBAAC,sBAAA1F,EAAA,6DACNqH,EAAY,GADN,SAEAE,IAFA,uBAGCL,GAAcM,QAAQC,IAAIP,GAH3B,OAIFA,GACA/B,GAAa,GALX,2CAOP,CAAC6B,IAEJ,IAAMO,EAAe,WACjB,IAAK,IAAI5G,EAAI,EAAGA,EAAI,GAAIA,IACpB,GAAIqG,GAAeA,EAAWrG,GAAG+G,MAAQJ,EAErC,YADAH,EAAcH,EAAWrG,IAIjC6G,QAAQC,IAAI,SAGhB,OACI,mCAAGvC,EAAY,cAAC,GAAD,IAAc,eAACyC,GAAD,WACzB,0FACA,eAACC,GAAD,WACI,qBAAKlJ,IAAG,yBAAoBwI,EAAWW,MAA/B,QAA4ClJ,IAAKuI,EAAWY,OACpE,sBAAKrJ,MAAM,cAAX,UACI,mBAAGA,MAAM,OAAT,SAAiByI,EAAWa,QAAQC,QACpC,mBAAGvJ,MAAM,OAAT,SAAiByI,EAAWY,UAEhC,qBAAKrJ,MAAM,cAAX,SACKyI,EAAWa,QAAQE,KAAKjF,MAAM,SAASC,KAAI,SAAAC,GACxC,OAAQ,8BAAIA,EAAKgF,QAAQ,oCAAqC,IAAI,kCAI9E,eAACC,GAAD,WACI,mBAAG1J,MAAM,aAAT,oFACA,+BACI,qBAAI2J,QAAQ,GAAZ,UACI,qBACI1J,IAAG,yBAAoBwI,EAAWmB,QAAQ,GAAGR,MAA1C,QACHlJ,IAAKuI,EAAWmB,QAAQ,GAAGP,OAE/B,+BACKZ,EAAWmB,QAAQ,GAAGC,KAAKtF,MAAM,QAAQC,KAAI,SAAAC,GAC1C,OAAQ,4BAAIA,EAAKgF,QAAQ,oCAAqC,cAI1E,qBAAIE,QAAQ,+BAAZ,UACI,qBACI1J,IAAG,yBAAoBwI,EAAWmB,QAAQ,GAAGR,MAA1C,QACHlJ,IAAKuI,EAAWmB,QAAQ,GAAGP,OAE/B,+BACKZ,EAAWmB,QAAQ,GAAGC,KAAKtF,MAAM,QAAQC,KAAI,SAAAC,GAC1C,OAAQ,4BAAIA,EAAKgF,QAAQ,oCAAqC,oBAMlF,cAAC,IAAD,CAAMtJ,GAAG,IAAT,SACI,cAAC2J,GAAD,+EAWVZ,GAAa/D,IAAOvF,IAAV,ybAwBVuJ,GAAahE,IAAOvF,IAAV,4dA4BV8J,GAAevE,IAAOvF,IAAV,0XAyBZkK,GAAY3E,IAAO9F,OAAV,+LCnJf,IAAM0K,GAAgB3K,IAAOQ,IAAV,iRAeJoK,GAhCf,WACI,OACI,qCACI,cAAC,EAAD,IACA,cAACD,GAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOE,KAAK,IAAIC,OAAK,EAACC,UAAWpK,IACjC,cAAC,IAAD,CAAOkK,KAAK,QAAQE,UAAW9D,KAC/B,cAAC,IAAD,CAAO4D,KAAK,UAAUC,OAAK,EAACC,UAAW7B,gBCZ/D8B,IAASC,OACL,cAAC,GAAD,IACF9J,SAAS+J,eAAe,W","file":"static/js/main.0bf05b85.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\r\nimport reset from \"styled-reset\"\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n${reset}\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n    list-style: none;\r\n    text-decoration: none;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\nbutton {\r\n\tcursor: pointer;\r\n}\r\n`;\r\nexport default GlobalStyles;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n    /* 공통 스타일 */\r\n    font-family: \"Noto Sans KR\", sans-serif;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    /* 크기 */\r\n    border: 2.5px solid;\r\n    font-size: 1.3rem;\r\n    margin-top: 40px;\r\n    padding: 0.5rem;\r\n    width: 60%;\r\n\r\n    /* 색상 */\r\n    color: #3a1a00;\r\n    border-color: #874e20;\r\n    background: #ffffff;\r\n    box-shadow: 2px 2px 5px 1px rgba(63, 7, 7, 0.2);\r\n    &:focus {\r\n        color: #ffffff;\r\n        background: #874e20;\r\n        border-color: #874e20;\r\n        outline: 0;\r\n    }\r\n\r\n    /* 기타 */\r\n`;\r\n\r\nfunction Button({ children, ...rest }){\r\n    return <StyledButton {...rest}>{children}</StyledButton>;\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"../Button\";\r\n\r\nconst Start = () => {\r\n    return (\r\n        <StartWrap>\r\n            <StartMain>\r\n                <Contents>\r\n                    <span class=\"icon\">\r\n                        <img\r\n                            src=\"/images/background/coffee-solid.svg\"\r\n                            alt=\"coffeecup\"\r\n                        />\r\n                    </span>\r\n                    <h3>\r\n                        나와 어울리는\r\n                        <br />\r\n                        카페 음료는?\r\n                        <br />\r\n                    </h3>\r\n                    <p>\r\n                        추운 겨울\r\n                        <br />\r\n                        나의 얼어버린 손과 마음을\r\n                        <br />\r\n                        녹여줄 심리테스트\r\n                        <br />\r\n                    </p>\r\n                    <Link to='/test'>\r\n                    <Button>시작하기</Button>\r\n                    </Link>\r\n                </Contents>\r\n            </StartMain>\r\n        </StartWrap>\r\n    );\r\n};\r\n\r\nconst Fade = keyframes`\r\n    from {transform: translateY(30px); opacity: 0;}\r\n    to { transform: translateY(0px); opacity: 1;}\r\n`;\r\n\r\nconst StartWrap = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background: url(\"./images/background/red_back2.svg\");\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n`;\r\n\r\nconst StartMain = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(\"./images/background/snowflake.svg\");\r\n`;\r\n\r\nconst Contents = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    padding: 9rem 0 0 0;\r\n    img {\r\n        width: 3rem;\r\n    }\r\n    h3 {\r\n        font-family: \"UhBeeBEOJJI\";\r\n        margin-top: 20px;\r\n        font-size: 2.7rem;\r\n        animation: ${Fade} 0.7s linear alternate;\r\n  }\r\n    \r\n    p {\r\n        margin-top: 20px;\r\n        text-align: center;\r\n        font-family: \"Noto Sans KR\", sans-serif;\r\n        line-height: 1.5rem;\r\n    }\r\n\r\n    a {\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n`;\r\nexport default Start;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Snow() {\r\n    setTimeout(() => {\r\n        var canvas = document.querySelector(\".snow\"),\r\n            ctx = canvas.getContext(\"2d\"),\r\n            windowW = window.innerWidth,\r\n            windowH = window.innerHeight,\r\n            numFlakes = 70,\r\n            flakes = [];\r\n\r\n        function Flake(x, y) {\r\n            var maxWeight = 2,\r\n                maxSpeed = 0.7;\r\n\r\n            this.x = x;\r\n            this.y = y;\r\n            this.r = randomBetween(0, 1);\r\n            this.a = randomBetween(0, Math.PI);\r\n            this.aStep = 0.01;\r\n\r\n            this.weight = randomBetween(2, maxWeight);\r\n            this.alpha = this.weight / maxWeight;\r\n            this.speed = (this.weight / maxWeight) * maxSpeed;\r\n\r\n            this.update = function () {\r\n                this.x += Math.cos(this.a) * this.r;\r\n                this.a += this.aStep;\r\n\r\n                this.y += this.speed;\r\n            };\r\n        }\r\n\r\n        function init() {\r\n            var i = numFlakes,\r\n                flake,\r\n                x,\r\n                y;\r\n\r\n            while (i--) {\r\n                x = randomBetween(0, windowW, true);\r\n                y = randomBetween(0, windowH, true);\r\n\r\n                flake = new Flake(x, y);\r\n                flakes.push(flake);\r\n            }\r\n\r\n            scaleCanvas();\r\n            loop();\r\n        }\r\n\r\n        function scaleCanvas() {\r\n            canvas.width = windowW;\r\n            canvas.height = windowH;\r\n        }\r\n\r\n        function loop() {\r\n            var i = flakes.length,\r\n                z,\r\n                dist,\r\n                flakeA,\r\n                flakeB;\r\n\r\n            // clear canvas\r\n            ctx.save();\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.clearRect(0, 0, windowW, windowH);\r\n            ctx.restore();\r\n\r\n            // loop of hell\r\n            while (i--) {\r\n                flakeA = flakes[i];\r\n                flakeA.update();\r\n\r\n                /*for (z = 0; z < flakes.length; z++) {\r\n  flakeB = flakes[z];\r\n  if (flakeA !== flakeB && distanceBetween(flakeA, flakeB) < 150) {          \r\n    ctx.beginPath();\r\n    ctx.moveTo(flakeA.x, flakeA.y);\r\n    ctx.lineTo(flakeB.x, flakeB.y);\r\n    ctx.strokeStyle = '#444444';\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  }\r\n}*/\r\n\r\n                ctx.beginPath();\r\n                ctx.arc(\r\n                    flakeA.x,\r\n                    flakeA.y,\r\n                    flakeA.weight,\r\n                    0,\r\n                    2 * Math.PI,\r\n                    false\r\n                );\r\n                ctx.fillStyle = \"rgba(255, 255, 255, \" + flakeA.alpha + \")\";\r\n                ctx.fill();\r\n\r\n                if (flakeA.y >= windowH) {\r\n                    flakeA.y = -flakeA.weight;\r\n                }\r\n            }\r\n\r\n            requestAnimationFrame(loop);\r\n        }\r\n\r\n        function randomBetween(min, max, round) {\r\n            var num = Math.random() * (max - min + 1) + min;\r\n\r\n            if (round) {\r\n                return Math.floor(num);\r\n            } else {\r\n                return num;\r\n            }\r\n        }\r\n\r\n        function distanceBetween(vector1, vector2) {\r\n            var dx = vector2.x - vector1.x,\r\n                dy = vector2.y - vector1.y;\r\n\r\n            return Math.sqrt(dx * dx + dy * dy);\r\n        }\r\n\r\n        init();\r\n    }, 0);\r\n\r\n    return <Canvas className=\"snow\"></Canvas>;\r\n}\r\n\r\nexport default Snow;\r\n\r\nconst Canvas = styled.canvas`\r\n    position: absolute;\r\n`;\r\n","import React from 'react'\r\nimport styled, {keyframes} from 'styled-components'\r\nimport {Link, Route, BrowserRouter as Router} from \"react-router-dom\"\r\n\r\n\r\nfunction StoryBtn({storyHandler, count}) {\r\n    if(count == 14){\r\n        return (\r\n            <Link to=\"/result\"><ResultBtn><img src=\"/images/background/cup-btn.png\"></img></ResultBtn></Link>\r\n        )\r\n        \r\n    } else {\r\n        return (\r\n    \r\n            <NextBtn onClick={storyHandler}>\r\n                    next<i className=\"fas fa-angle-double-right\"></i>\r\n                    </NextBtn>)\r\n    }\r\n    \r\n}\r\n\r\nexport default StoryBtn\r\n\r\n// const Fade = keyframes`\r\n//     from {transform: translateY(30px); opacity: 0;}\r\n//     to { transform: translateY(0px); opacity: 1;}\r\n// `;\r\n\r\n\r\nconst NextBtn = styled.button`\r\nposition: absolute;\r\nfont-family: \"UhBeeBEOJJI\";\r\nfont-size: 2rem;\r\ncolor: white;\r\nbackground: transparent;\r\nborder: none;\r\nright: 20px;\r\nbottom: 100px;\r\n/* animation: 0.7s linear alternate;\r\n        animation-delay: 2s; */\r\n`;\r\n\r\nconst ResultBtn = styled.button`\r\nposition: relative;\r\ncursor: pointer;\r\nbackground: none;\r\nborder: none;\r\noutline: none;\r\nz-index: 300;\r\n&:active, &:focus {\r\n    outline: none;\r\n}\r\nimg {\r\n    width: 260px;\r\n    cursor: pointer;\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport Snow from \"./Snow\";\r\nimport styled, {keyframes} from \"styled-components\";\r\nimport NextBtn from './StoryBtn'\r\n\r\nfunction Tutorial({story, storyHandler, count}) {\r\n    return (\r\n        <Wrap>\r\n            <Snow />\r\n            <StoryWrap>\r\n                <h3>{story.title}</h3>\r\n                <p>\r\n                    {story.first_sentence.split('\\n').map(line => {\r\n                        return(<>{line}<br /></>)\r\n                    })}\r\n                </p>\r\n                <p>\r\n                {story.second_sentence.split('\\n').map(line => {\r\n                        return(<>{line}<br /></>)\r\n                    })}\r\n                </p>\r\n            </StoryWrap>\r\n            <ButtonWrap>\r\n                <NextBtn storyHandler={storyHandler} count={count}/>\r\n            </ButtonWrap>\r\n        </Wrap>\r\n    );\r\n}\r\n\r\nconst Fade = keyframes`\r\n    from {transform: translateY(30px); opacity: 0;}\r\n    to { transform: translateY(0px); opacity: 1;}\r\n`;\r\n\r\n\r\nconst Wrap = styled.div`\r\n    background: #9f3337;\r\n    width: 100vh;\r\n    height: 100vh;\r\n    margin: 0;\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst StoryWrap = styled.div`\r\n    text-align: center;\r\n    font-family: \"UhBeeBEOJJI\";\r\n    color: #ffffff;\r\n    h3 {\r\n        font-size: 3rem;\r\n        margin-bottom: 2rem;\r\n        animation: ${Fade} 0.7s linear alternate;\r\n        animation-delay: 0s;\r\n    }\r\n    p {\r\n        font-size: 1.5rem;\r\n        margin-bottom: 1rem;\r\n        line-height: 2.5rem;\r\n        animation: ${Fade} 0.7s linear alternate;\r\n        animation-delay: 0.5s;\r\n    }\r\n`;\r\n\r\nconst ButtonWrap = styled.div``;\r\n\r\nexport default Tutorial;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Styled, { ThemeProvider } from \"styled-components\";\r\n\r\nfunction ProgBar({ questionNum }) {\r\n    const iconPercentage = {\r\n        percentage: questionNum,\r\n    };\r\n    return (\r\n        <ThemeProvider theme={iconPercentage}>\r\n            <BarContainer>\r\n                <Progress>\r\n                    <Percentage>\r\n                        <i className=\"fas fa-mug-hot\"></i>\r\n                    </Percentage>\r\n                </Progress>\r\n            </BarContainer>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default ProgBar;\r\n\r\nconst BarContainer = Styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n@media only screen and (max-width: 576px) {\r\n    align-items: top;\r\n    height: 15%;\r\n  }\r\n`;\r\n\r\nconst Progress = Styled.div`\r\nwidth: 50%;\r\nheight: 0.5rem;\r\nbackground: #999999;\r\nmargin-top: 2rem;\r\nborder-radius: 1rem;\r\n@media only screen and (max-width: 576px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nconst Percentage = Styled.div`\r\ntransition: all 0.3s ease-out;\r\nwidth: ${props => props.theme.percentage*9}%;\r\nheight: 0.5rem;\r\nbackground: #b56467;\r\nposition: relative;\r\nborder-radius: 1rem;\r\ni {\r\n    position: absolute;\r\n    font-size: 2rem;\r\n    color: #b56467;\r\n    top: -17px;\r\n    right: -13px;\r\n    text-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n    -webkit-text-stroke: 0.2px #ffffff\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nfunction Question({questionList}) {\r\n    return (\r\n        <QuestionWrap>\r\n            <i className={questionList.icon}></i>\r\n            <h3>\r\n            {questionList.question.split('</br>').map(line => {\r\n                        return(<>{line}<br/></>)\r\n                    })}\r\n            </h3>\r\n        </QuestionWrap>\r\n    );\r\n}\r\n\r\nexport default Question;\r\n\r\nconst QuestionWrap = Styled.div `\r\nwidth: 100%;\r\nheight: 55%;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nflex-direction: column;\r\n i{\r\n     color: #b56467;\r\n     font-size: 2rem;\r\n     margin-bottom: 2rem;\r\n }\r\n h3 {\r\n    text-align: center;\r\n    font-family: \"UhBeeBEOJJI\";\r\n    color: #3a1a00;\r\n    font-size: 2.7rem;\r\n    line-height: 3.4rem;\r\n }\r\n @media only screen and (max-width: 576px) {\r\n    align-items: top;\r\n    height: 40%;\r\n    h3 {\r\n        font-size: 2.2rem;\r\n    }\r\n  }\r\n\r\n`;","import React from 'react'\r\nimport Styled from 'styled-components'\r\n\r\nfunction ChoiceBtn({questionList, questionHandler}) {\r\n    return (\r\n        <SelectSecWrap>\r\n            <SelectBtn onClick={questionHandler} value={questionList.alpa_result.first}>\r\n            {questionList.select_list.first.split('</br>').map(line => {\r\n                        return(<>{line}<br/></>)\r\n                    })}\r\n            </SelectBtn>\r\n            <SelectBtn onClick={questionHandler}  value={questionList.alpa_result.second}>\r\n            {questionList.select_list.second.split('</br>').map(line => {\r\n                        return(<>{line}<br/></>)\r\n                    })}\r\n            </SelectBtn>\r\n        </SelectSecWrap>\r\n    )\r\n}\r\n\r\nexport default ChoiceBtn\r\n\r\n\r\n\r\nconst SelectSecWrap = Styled.div`\r\nwidth: 100%;\r\nheight: 30%;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: flex-start;\r\nflex-direction: column;\r\ntransition: all 0.3s ease-out;\r\n@media only screen and (max-width: 576px) {\r\n    align-items: top;\r\n    height: 40%;\r\n  }\r\n`;\r\n\r\nconst SelectBtn = Styled.button`\r\n    font-family: \"Noto Sans KR\", sans-serif;\r\n    border-radius: 10px;\r\n    transition: all 0.3s ease-out;\r\n    cursor: pointer;\r\n    /* 크기 */\r\n    border: 2.5px solid;\r\n    font-size: 1rem;\r\n    margin-top: 20px;\r\n    padding: 0.5rem;\r\n    width: 70%;\r\n    height: 100px;\r\n\r\n    /* 색상 */\r\n    color: #3a1a00;\r\n    border-color: #874e20;\r\n    background: #ffffff;\r\n    box-shadow: 2px 2px 5px 1px rgba(63, 7, 7, 0.2);\r\n    &:active {\r\n        color: #ffffff;\r\n        background: #874e20;\r\n        border-color: #874e20;\r\n        outline: 0;\r\n    }\r\n    &:focus {\r\n        outline: 0;\r\n    }\r\n\r\n    @media only screen and (max-width: 576px) {\r\n        width: 90%;\r\n        font-size: 1.1rem;\r\n      }\r\n`;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ProgBar from './ProgBar'\r\nimport Question from './Question'\r\nimport ChoiceBtn from './ChoiceBtn'\r\n\r\nfunction MainTest({questionList, questionNum, questionHandler}) {\r\n    return (\r\n        <TestWrap>\r\n            <ProgBar questionNum={questionNum}/>\r\n            <Question questionList={questionList[questionNum]}/>\r\n            <ChoiceBtn questionList={questionList[questionNum]} questionHandler={questionHandler}/>\r\n        </TestWrap>\r\n    )\r\n}\r\n\r\nexport default MainTest\r\n\r\nconst TestWrap = styled.div`\r\nwidth: 100vh;\r\nheight: 100vh;\r\nbackground-image: url(\"./images/background/background.png\");\r\n`;","import React, { useState, useEffect } from \"react\";\r\nimport Tutorial from \"../Tutorial\";\r\nimport MainTest from \"../MainTest\";\r\nimport axios from \"axios\";\r\n\r\nconst Test = () => {\r\n    const storyLists = [\r\n        {\r\n            title: \"12월의 주말\",\r\n            first_sentence:\r\n                \"모처럼 집에서 여유를 즐기고 있다\\n밖에서 캐롤이 조용히 창문을 타고 들려온다\\n\",\r\n            second_sentence:\r\n                \"지난 한 해 동안의\\n내 발자취를 보기 위해\\n다이어리를 펼쳤다\\n\",\r\n        },\r\n        {\r\n            title: \"모임 당일\",\r\n            first_sentence:\r\n                \"추운 날씨에 맞서기 위해\\n옷으로 꽁꽁 싸매고 집을 나섰다\\n\",\r\n            second_sentence:\r\n                \"그러다 길 옆쪽으로\\n사람들이 북적북적 모여있는 것을\\n발견했다\\n\",\r\n        },\r\n        {\r\n            title: null,\r\n            first_sentence: \"드디어 도착한 집,\\n재미있게 놀았나요?\\n\",\r\n            second_sentence:\r\n                \"추위와 싸웠을 당신을 위해\\n음료를 한 잔 준비했어요\\n\",\r\n        },\r\n    ];\r\n    const [story, setStory] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [questionNum, setQuestionNum] = useState(0);\r\n    const [questionList, setQuestionList] = useState([]);\r\n    const [selectedMbti, setSelectedMbti] = useState([]);\r\n    const [finalResult, setFinalResult] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://mern-cafe-mbti.herokuapp.com/get/question\").then((response) => {\r\n            setQuestionList(response.data);\r\n            setIsLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (questionNum == 12) {\r\n            localStorage.setItem(\"arrayResult\", JSON.stringify(selectedMbti));\r\n            calculateResult();\r\n        }\r\n    }, [selectedMbti]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"fin_result\", JSON.stringify(finalResult))\r\n    }, [finalResult])\r\n\r\n    const storyHandler = () => {\r\n        setStory(story + 1);\r\n        setCount(count + 1);\r\n    };\r\n\r\n    const questionHandler = (e) => {\r\n        setSelectedMbti([...selectedMbti, e.target.value]);\r\n        setQuestionNum(questionNum + 1);\r\n        setCount(count + 1);\r\n    };\r\n    const calculateResult = async () => {\r\n        let beforeResult = JSON.parse(localStorage.getItem(\"arrayResult\"));\r\n        let finResult = [];\r\n        (await beforeResult.filter((x) => x == \"E\")) >\r\n        beforeResult.filter((x) => x == \"I\")\r\n            ? finResult.push(\"E\")\r\n            : finResult.push(\"I\");\r\n        (await beforeResult.filter((x) => x == \"S\")) >\r\n        beforeResult.filter((x) => x == \"N\")\r\n            ? finResult.push(\"S\")\r\n            : finResult.push(\"N\");\r\n        (await beforeResult.filter((x) => x == \"T\")) >\r\n        beforeResult.filter((x) => x == \"F\")\r\n            ? finResult.push(\"T\")\r\n            : finResult.push(\"F\");\r\n        (await beforeResult.filter((x) => x == \"J\")) >\r\n        beforeResult.filter((x) => x == \"P\")\r\n            ? finResult.push(\"J\")\r\n            : finResult.push(\"P\");\r\n\r\n        await setFinalResult(finResult.join(\"\").toLowerCase());\r\n    };\r\n\r\n    if (count == 0 || count == 5 || count == 14) {\r\n        return (\r\n            <>\r\n                <Tutorial\r\n                    story={storyLists[story]}\r\n                    storyHandler={storyHandler}\r\n                    count = {count}\r\n                />\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                {isLoading ? (\r\n                    \"loading\"\r\n                ) : (\r\n                    <MainTest\r\n                        questionList={questionList}\r\n                        questionNum={questionNum}\r\n                        questionHandler={questionHandler}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Test;\r\n","import React from 'react'\r\nimport Styled from 'styled-components'\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"coffeeWrap\">\r\n        <div class=\"coffee-mug\">\r\n            <div class=\"coffee-container\">\r\n                <div class=\"coffee\">\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <h3>음료를 제조하고 있어요</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport { Link, Route, BrowserRouter as Router } from \"react-router-dom\"\r\nimport Spinner from \"../Spinner\"\r\nimport axios from \"axios\";\r\n\r\nconst Result = () => {\r\n    const [resultList, setResultList] = useState();\r\n    const [targetList, setTargetList] = useState();\r\n    const [reRender, setReRender] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    let mbti_result = JSON.parse(localStorage.getItem(\"fin_result\"))\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(\"https://mern-cafe-mbti.herokuapp.com/get/result\").then((response) => {\r\n            setResultList(response.data)\r\n        })\r\n\r\n    }, [reRender])\r\n\r\n    useEffect(async () => {\r\n        setReRender(0)\r\n        await getFinalMbti()\r\n        await (targetList && console.log(targetList))\r\n        if (targetList) {\r\n            setIsLoading(false)\r\n        }\r\n    }, [resultList])\r\n\r\n    const getFinalMbti = () => {\r\n        for (let i = 0; i < 16; i++) {\r\n            if (resultList && (resultList[i].mbti == mbti_result)) {\r\n                setTargetList(resultList[i])\r\n                return\r\n            }\r\n        }\r\n        console.log('fail')\r\n    }\r\n\r\n    return (\r\n        <>{isLoading ? <Spinner /> : <ResultWrap>\r\n            <h3>나와 어울리는 음료는</h3>\r\n            <MainResult>\r\n                <img src={`/images/coffee/${targetList.image}.png`} alt={targetList.name} />\r\n                <div class=\"coffee-feat\">\r\n                    <p class=\"feat\">{targetList.feature.short}</p>\r\n                    <p class=\"name\">{targetList.name}</p>\r\n                </div>\r\n                <div class=\"coffee-desc\">\r\n                    {targetList.feature.long.split('</br>').map(line => {\r\n                        return (<p>{line.replace(/(<\\/?(?:a|p|img)[^>]*>)|<[^>]+>/ig, '')}<br /></p>)\r\n                    })}\r\n                </div>\r\n            </MainResult>\r\n            <ResultFriend>\r\n                <p class=\"best_title\">연말에 생각 날 최고의 궁합</p>\r\n                <ul>\r\n                    <li onclick=\"\">\r\n                        <img\r\n                            src={`/images/coffee/${targetList.friends[0].image}.png`}\r\n                            alt={targetList.friends[0].name}\r\n                        />\r\n                        <span>\r\n                            {targetList.friends[0].desc.split('</p>').map(line => {\r\n                                return (<p>{line.replace(/(<\\/?(?:a|p|img)[^>]*>)|<[^>]+>/ig, '')}</p>)\r\n                            })}\r\n                        </span>\r\n                    </li>\r\n                    <li onclick=\"location.href = '/result/14'\">\r\n                        <img\r\n                            src={`/images/coffee/${targetList.friends[1].image}.png`}\r\n                            alt={targetList.friends[1].name}\r\n                        />\r\n                        <span>\r\n                            {targetList.friends[1].desc.split('</p>').map(line => {\r\n                                return (<p>{line.replace(/(<\\/?(?:a|p|img)[^>]*>)|<[^>]+>/ig, '')}</p>)\r\n                            })}\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n            </ResultFriend>\r\n            <Link to=\"/\">\r\n                <ReturnBtn>\r\n                    테스트 다시 하러가기\r\n            </ReturnBtn>\r\n            </Link>\r\n        </ResultWrap>\r\n        }</>\r\n    );\r\n};\r\n\r\nexport default Result;\r\n\r\nconst ResultWrap = Styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nflex-direction: column;\r\nfont-family: \"Cafe24Oneprettynight\";\r\ncolor: #3a1a00;\r\npadding: 50px 30px;\r\noverflow-y: scroll;\r\noverflow-x: hidden;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: url(../../images/background/background.png);\r\nh3{\r\n    margin: 30px 0;\r\n    text-align: center;\r\nfont-size: 2rem;\r\n}\r\na {\r\n    display: flex;\r\n    text-align: center;\r\n    width: 100%;\r\n}\r\n`;\r\n\r\nconst MainResult = Styled.div`\r\n    display: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nflex-direction: column;\r\nimg {\r\n    width: 220px;\r\n}\r\n\r\n.coffee-feat {\r\n    text-align: center;\r\n    margin: 15px 0 35px 0;\r\n    .feat {\r\n        font-size: 1.7rem;\r\n        margin-bottom: 10px;\r\n        color: #b56467;\r\n    }\r\n    .name {\r\n        font-size: 2.7rem;\r\n    }\r\n}\r\n\r\n.coffee-desc p {\r\n    line-height: 1.5rem;\r\n    font-size: 1.1rem;\r\n    margin-bottom: 1rem;\r\n}\r\n`;\r\nconst ResultFriend = Styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nflex-direction: column;\r\np.best_title {\r\n    font-size: 1.5rem;\r\n    margin : 10px 0 30px 0;\r\n}\r\nimg {\r\n    width: 130px;\r\n}\r\n\r\nul {\r\n    display: flex;\r\n    li{\r\n\r\n        display: flex:\r\n        align-items: center;\r\n        justify-content: center;\r\ntext-align: center;\r\n    }\r\n}\r\n`;\r\n\r\nconst ReturnBtn = Styled.button`\r\nmargin: 50px;\r\npadding: 1rem 0;\r\nfont-size: 1.5rem;\r\nheight: 5rem;\r\nwidth: 100%;\r\nfont-family: \"Cafe24Oneprettynight\";\r\nbackground-color: beige;\r\nborder: none;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GlobalStyles from \"./components/GlobalStyles\";\r\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Start from \"./components/pages/Start\";\r\nimport Test from \"./components/pages/Test\";\r\nimport Result from \"./components/pages/Result\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <GlobalStyles />\r\n            <RootContainer>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Start} />\r\n                        <Route path=\"/test\" component={Test} />\r\n                        <Route path=\"/result\" exact component={Result} />\r\n                    </Switch>\r\n                </Router>\r\n            </RootContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nconst RootContainer = styled.div`\r\n    display: flex;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    max-width: 480px;\r\n    height: 100vh;\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}